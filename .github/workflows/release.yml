name: Bump version, build and create release

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Create Release and bump version files
        uses: helsingborg-stad/release-wp-plugin-action@1.0.3
        with:
          php-version: 8.2
          node-version: 20.6.0

  build-assets:
    needs: ["release"]
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # -- Get Latest Release Version ---
      - name: Get latest release version
        id: get-version
        run: |
          echo "LATEST_RELEASE=$(curl -s https://api.github.com/repos/${{ github.repository }}/releases/latest | jq -r '.tag_name')" >> $GITHUB_ENV

      - name: Update version in package.json
        run: |
          LATEST_VERSION="${{ env.LATEST_RELEASE }}"
          echo "$(jq --arg version "$LATEST_VERSION" '.version = $version' package.json)" > package.json

      # --- PHP Build ---
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"

      - name: Run PHP build script
        run: php build.php --no-composer --cleanup --release

      - name: Overwrite .gitignore for release branch
        run: |
          printf "/*\n!/dist\n!/dist/**\n!/source/php\n!/source/php/**\n" > .gitignore

      # --- Release Branch Commit ---
      - name: Commit and push release branch
        run: |
          git config user.name "CI Release Bot"
          git config user.email "ci@helsingborg.se"
          git checkout -B release
          git add -A
          git commit -m "Release build from $GITHUB_SHA" || echo "No changes to commit"
          git push origin release --force
      
      # --- Create zip file of release contents ---
      - name: Create release zip
        run: |
          mkdir -p artifacts
          git archive \
            --format=zip \
            --output=artifacts/release.zip \
            HEAD

      # --- Upload zip to workflow artifacts (temporary) ---
      - name: Upload workflow artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-zip
          path: artifacts/*.zip

      # --- Upload zip to GitHub Release (permanent) ---
      - name: Upload release zip to GitHub Release
        uses: helsingborg-stad/upload-artifact@main
        with:
          artifact: artifacts/${{ env.LATEST_RELEASE }}.zip
          artifact_mime_type: application/zip
          repo: ${{ github.repository }}
          release: ${{ env.LATEST_RELEASE }}
          gh_token: ${{ secrets.GITHUB_TOKEN }}
