name: Bump version, build and create release

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Create Release and bump version files
        uses: helsingborg-stad/release-wp-plugin-action@1.0.3
        with:
          php-version: 8.2
          node-version: 20.6.0

  build-assets:
    needs: ['release']
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # --- PHP Build ---
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'

      - name: Run PHP build script
        run: php build.php

      - name: Remove vendor
        run: rm -rf vendor

      # --- Node/NPM Build ---
      - name: Get latest release version
        id: get-version
        run: |
          echo "LATEST_RELEASE=$(curl -s https://api.github.com/repos/${{ github.repository }}/releases/latest | jq -r '.tag_name')" >> $GITHUB_ENV

      - name: Update version in package.json
        run: |
          LATEST_VERSION="${{ env.LATEST_RELEASE }}"
          jq --arg version "$LATEST_VERSION" '.version = $version' package.json > temp.json && mv temp.json package.json

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 20
          registry-url: 'https://npm.pkg.github.com/'

      - name: Inject access token in .npmrc
        run: | 
          echo "registry=https://npm.pkg.github.com/helsingborg-stad" >> ~/.npmrc
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" >> ~/.npmrc

      - name: Run CI
        if: ${{ hashFiles('package.json') != '' && hashFiles('package-lock.json') != '' }}
        run: npm ci --no-progress --no-audit

      - name: Run install
        if: ${{ hashFiles('package.json') != '' && hashFiles('package-lock.json') == '' }}
        run: npm install --no-progress --no-audit

      - name: Run build
        if: ${{ hashFiles('package-lock.json') != '' && hashFiles('gulp.js') == '' }}
        run: npx --yes browserslist@latest --update-db && npm run build

      - name: Run gulp
        if: ${{ hashFiles('package-lock.json') != '' && hashFiles('gulp.js') != '' }}
        run: gulp

      - name: Publish npm package to GHCR
        run: npm publish --registry=https://npm.pkg.github.com
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Overwrite .gitignore for release branch
        run: |
          printf "/*\n!/dist\n!/dist/**\n" > .gitignore

      - name: Remove everything except dist and .gitignore
        run: |
          find . -mindepth 1 -maxdepth 1 ! -name 'dist' ! -name '.gitignore' -exec rm -rf {} +

     # --- Release Branch Commit ---
      - name: Commit and push release branch
        run: |
          git config user.name "CI Release Bot"
          git config user.email "ci@helsingborg.se"
          git checkout -B release
          git add -A
          git commit -m "Release build from $GITHUB_SHA" || echo "No changes to commit"
          git push origin release --force
